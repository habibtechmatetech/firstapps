version: 2.1
jobs:
  node:
    working_directory: ~/firstapps
    docker:
      - image: cimg/node:12.16

    steps:
      - checkout:
          path: ~/firstapps

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      #Test Eslint and flow 
      - run:
          name: Eslint
          command: yarn run eslint

      #Jest Test for android 1
      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          #environment:
            #JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/firstapps
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

 # macos-build-and-test:
  #  working_directory: ~/firstapps
   # macos:
    #  xcode: 11.3.0
    #environment:
     # FL_OUTPUT_DIR: output
      #FASTLANE_LANE: test

    #steps:
     # - checkout
      #- restore_cache:
       #   key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      #- restore_cache:
       #   key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      #- run: yarn install

      #- save_cache:
       #   key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
        #  paths:
         #   - ~/.cache/yarn

      #- save_cache:
       #   key: node-v1-{{ checksum "package.json" }}-{{ arch }}
        #  paths:
         #   - node_modules

      #- restore_cache:
       #   key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      #Pods directory is ignored to match default RN setup, but can also check them into source control
      #https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
      #- restore_cache:
       #   key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}

      #- run: 
       #   command: pod install
        #  working_directory: ios

      #- run: 
       #   command: bundle install
        #  working_directory: ios

      #- save_cache:
       #   key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
        #  paths:
         #   - vendor/bundle

      #- save_cache:
       #   key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
        #  paths:
         #   - ios/Pods

      #- run:
       #   name: Fastlane
        #  command: bundle exec fastlane $FASTLANE_LANE
         # working_directory: ios

      #- store_artifacts:
       #   path: output
          
      #- store_test_results:
       #   path: output/scan
            
  android-build-and-test:
    working_directory: ~/firstapps/android
    docker:
      #- image: circleci/android:api-29-ndk
      - image: circleci/android:api-29-node
    environment:
      FL_OUTPUT_DIR: output
      FAST_PARAMETER: android
      FIREBASE_DEPLOY: 1//03zarV0CwZre-CgYIARAAGAMSNwF-L9IrK6-djwePrFV-Tke_LTXLG54YJrKQE_fZUtGzb71MD9pps4y6trrfPH83l4o28d_uW6E

      #JVM_OPTS: -Xmx3200m
      
    steps:
      - checkout:
          path: ~/firstapps

      - attach_workspace:
          at: ~/firstapps

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - restore_cache:
          key: android-jars-v1-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      
      - run: bundle install
      
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle
      - save_cache:
          key: android-jars-v1-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          paths:
            - ~/.gradle
      

      #- run: fastlane action gradle
       #- run: yarn android
      
      - run:
          name: Run Tests
          command: ./gradlew lint test

      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: app/build/reports
          destination: reports

      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/reports

      - run:
          name: Install Firebase
          command: curl -sL firebase.tools | bash

      - run: fastlane add_plugin firebase_app_distribution
 
      - run:
          name: Build debug APK and release APK1
          command: bundle exec fastlane android $FAST_PARAMETER $FIREBASE_DEPLOY

      
      - run:
          name: fastlane tests
          command: |
            mkdir -p test-results/fastlane
            bundle exec fastlane test
            mv fastlane/report.xml test-results/fastlane

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results
  
        #  name: Build Debug APK
        #  command: yarn android:bundle
      

workflows:
  node-android:
    jobs:
      - node
      - android-build-and-test:
          requires:
            - node